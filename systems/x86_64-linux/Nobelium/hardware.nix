# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f266281d-580c-447e-8a4a-0cf144370aad";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8755-70D1";
      fsType = "vfat";
    };

  fileSystems."/mnt/arch" = {
    device = "/dev/disk/by-uuid/2d1da940-d863-496b-8664-970acdded644";
    fsType = "btrfs";
    options = [ "rw" "relatime" "ssd" "discard=async" "space_cache=v2"];
  };

  fileSystems."/mnt/Storage" = {
    device = "/dev/disk/by-uuid/a4731065-6480-4c3a-85b4-6d2c16b5d350";
    fsType = "btrfs";
    options = [ "acl" "autodefrag" "nossd" "usebackuproot" "datacow" ];
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/171215ac-67e1-4f39-aa3e-85d296d7ecb0"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
